---
import InfoExperience from "./InfoExperience.astro";

type Experience = {
  titulo: string;
  fechaInicio: string;
  fechaFin: string;
  entidad: string;
  descripcion: string;
};

const experiences: Experience[] = [
  {
    titulo: "Desarrollador Front-End",
    fechaInicio: "Octubre 2022",
    fechaFin: "Actualidad",
    entidad: "ITGlobers",
    descripcion: 'Responsable de traducir diseños en código en la plataforma VTEX, desarrollando componentes personalizados con React. Colaboré estrechamente con el equipo para garantizar interfaces visualmente atractivas y con altos estándares de usabilidad. Optimicé el rendimiento del ecommerce, implementando mejoras como la optimización de imágenes, minimización de archivos CSS y la reutilización de componentes JSONC. Aseguré la compatibilidad y la experiencia fluida en múltiples dispositivos y navegadores. Logré construir un ecommerce completo desde cero, configurando y personalizando páginas de productos, filtros de búsqueda, carrito de compras y checkout en la plataforma VTEX IO.'
  },
  {
    titulo: "Desarrollador Front-End Trainee ",
    fechaInicio: "Enero 2020",
    fechaFin: "Agosto 2022",
    entidad: "Mercadolibre ",
    descripcion: 'Responsable de la plataforma, componentes y utilidades para la creación y desarrollo de aplicaciones web. Mejora de un 30% en la entrega de software. Implantación de medidas de integración continua y despliegue con A/B testing en más de 15 equipos.'
  },
];
---

<script>
  import "splitting/dist/splitting.css";
import "splitting/dist/splitting-cells.css";
import Splitting from "splitting";
import { gsap } from "gsap";

import { ScrollTrigger } from "gsap/ScrollTrigger";

Splitting();

gsap.registerPlugin(ScrollTrigger);

const gsapItem = gsap.utils.toArray('.container-text-4');

gsapItem.forEach((gsIt: any) => {
const textChar = gsIt.querySelectorAll('.char')

let tl = gsap.timeline({
  scrollTrigger: {
    trigger: gsIt,
    start: "top 80%",
    end: "70% 80%",
    toggleActions: "play none none node",
    // markers: true,
    scrub: 12
  }
})

tl.from(textChar, 1, {
  opacity: 0,
  yPercent: 130,
  stagger: 0.08,
  ease: "back.inOut"
})

})
</script>

<section id="experience" class="text-black dark:text-white py-12">
  <div class="w-[100%] lg:w-[617px] font-semibold leading-tight mb-12 mt-12 container-text-4">
    <h2 data-splitting class="w-11/12 text-5xl lg:text-[80px] opacity-50">Explora</h2>
    <h2 data-splitting class="w-11/12 text-5xl lg:text-[80px] xl:text-end">Mi experiencia</h2>
  </div>
  {
    experiences.map((exp) => {
      return (
        <InfoExperience
          titulo={exp.titulo}
          fechaInicio={exp.fechaInicio}
          fechaFin={exp.fechaFin}
          entidad={exp.entidad}
          descripcion={exp.descripcion}
        />
      );
    })
  }
</section>
<style>
  #experience {
    width: 90%;
    margin: 0 auto;
  }

  @media screen and (min-width: 1600px) {
    #experience {
      width: 80%;
    }
  }
</style>
